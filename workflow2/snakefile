SAMPLES = ["RV417026_S15_L001", "RV417027_S18_L001", "RV417028_S20_L001","RV417029_S19_L001"]

rule all:
    input:
        expand("pipeline_deNovo_ragtag_output/correct/{sample}/ragtag.correct.fasta" ,sample=SAMPLES), 
        expand("pipeline_deNovo_ragtag_output/scaffold/{sample}/ragtag.scaffold.fasta" ,sample=SAMPLES),       
        directory(expand('pipeline_deNovo_quast_report/{sample}',sample=SAMPLES)), 
        expand("pipeline_deNovo_megahit_result/{sample}/final.contigs.fa",sample=SAMPLES)

        
rule fastp:
    input:
        "original_fastq/FastqExamples/{sample}_R1_001.fastq",
        "original_fastq/FastqExamples/{sample}_R2_001.fastq",
    output:
        "pipeline_deNovo_filtered_result/{sample}_R1_001.cleaned.fastq",
        "pipeline_deNovo_filtered_result/{sample}_R2_001.cleaned.fastq"
    conda:
        "envs/mapping.yaml"
    shell:
        "fastp -i {input[0]} -o {output[0]} -I {input[1]} -O {output[1]} -q 20 -c -y -l 50 -g -p -f 10 -n 5 --adapter_sequence GCGAATTTCGACGATCGTTGCATTAACTCGCGAA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"


rule megahit:
    input:
        "pipeline_deNovo_filtered_result/{sample}_R1_001.cleaned.fastq",
        "pipeline_deNovo_filtered_result/{sample}_R2_001.cleaned.fastq"
    output:
        out_dir = directory("pipeline_deNovo_megahit_result/{sample}/"),
        fasta = "pipeline_deNovo_megahit_result/{sample}/final.contigs.fa"
    conda:
        "envs/mapping.yaml"
    shell:
        "megahit -1 {input[0]} -2 {input[1]} -f -o {output.out_dir}"

rule ragtag_correct:
    input:
        "workflow/ref.fasta",
        "pipeline_deNovo_megahit_result/{sample}/final.contigs.fa"   
    output:
        out_dir = directory("pipeline_deNovo_ragtag_output/correct/{sample}"),
        fasta = "pipeline_deNovo_ragtag_output/correct/{sample}/ragtag.correct.fasta"
    conda:
        "envs/mapping.yaml"
    shell:
        "ragtag.py correct {input[0]} {input[1]} -o{output.out_dir} -t 8"

rule ragtag_scaffold:
    input:
        "workflow/ref.fasta",
        "pipeline_deNovo_ragtag_output/correct/{sample}/ragtag.correct.fasta"       
    output:
        out_dir = directory("pipeline_deNovo_ragtag_output/scaffold/{sample}"),
        fasta = "pipeline_deNovo_ragtag_output/scaffold/{sample}/ragtag.scaffold.fasta"       
    conda:
        "envs/mapping.yaml"
    shell:
        "ragtag.py scaffold {input[0]} {input[1]} -o {output.out_dir} "


rule quast:
    input:
        "pipeline_deNovo_megahit_result/{sample}/final.contigs.fa",
        "workflow/ref.fasta",
        "original_fastq/FastqExamples/{sample}_R1_001.fastq",
        "original_fastq/FastqExamples/{sample}_R2_001.fastq"
    output:
        directory('pipeline_deNovo_quast_report/{sample}')
    conda:
        "envs/mapping.yaml"
    shell:
        "quast.py -l megahit {input[0]}  -r {input[1]} -1 {input[2]} -2 {input[3]}  --rna-finding  -o {output} -t 4"
