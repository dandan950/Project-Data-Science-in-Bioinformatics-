rule all:
    input:    
        "result/RV417026_S15_L001_final.vcf.gz.tbi",    
        "result/RV417026_S15_L001_consensus.fa",
        

rule fastp:
    input:
        "original_fastq/FastqExamples/RV417026_S15_L001_R1_001.fastq",
        "original_fastq/FastqExamples/RV417026_S15_L001_R2_001.fastq"
    output:
        "filrered_result/RV417026_S15_L001_R1_001.cleaned.fastq",
        "filrered_result/RV417026_S15_L001_R2_001.cleaned.fastq"
    conda:
        "envs/mapping.yaml"
    shell:
        "fastp -i {input[0]} -o {output[0]} -I {input[1]} -O {output[1]} -q 20 -c -y -l 50 -g -p -f 10 -n 5 --adapter_sequence GCGAATTTCGACGATCGTTGCATTAACTCGCGAA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"


rule bwa_mem:
    input:
        "filrered_result/RV417026_S15_L001_R1_001.cleaned.fastq",
        "filrered_result/RV417026_S15_L001_R2_001.cleaned.fastq",
        "workflow/ref.fasta"
    output:
        "mapped/RV417026_S15_L001.bam",
        multiext("midresult/ref", ".amb", ".ann", ".bwt", ".pac", ".sa")
    conda:
        "envs/mapping.yaml"
    shell:
        "bwa index {input[2]} -p midresult/ref;"
        "bwa mem -p midresult/ref {input[0]} {input[1]} -o {output[0]}"

rule sam_view:
    input:
        "mapped/RV417026_S15_L001.bam"
    output:
        "mapped/RV417026_S15_L001_1.bam"
    conda:
        "envs/mapping.yaml"
    shell:
        "samtools view -b {input} -o {output}"
    
rule sam_sort:
    input:
        "mapped/RV417026_S15_L001_1.bam"
    output:
        "sorted/RV417026_S15_L001.bam"
    conda:
        "envs/mapping.yaml"
    shell:
        "samtools sort {input} -o {output}"

rule sam_index:
    input:
        "sorted/RV417026_S15_L001.bam"
    output:
        "sorted/RV417026_S15_L001.bam.bai"
    conda:
        "envs/mapping.yaml"
    shell:
        "samtools sort {input} -o {output}"

rule mpileup:
    input:
        "sorted/RV417026_S15_L001.bam",
        "workflow/ref.fasta",
    output:
        "sorted/RV417026_S15_L001.bcf",
    conda: 
        "envs/mapping.yaml"
    shell:
        "bcftools mpileup -Ob -o {output} -f {input[1]} {input[0]}"


rule call_variant:
    input:
        "sorted/RV417026_S15_L001.bcf",
    output:
        "result/RV417026_S15_L001.vcf",
    conda:
        "envs/mapping.yaml"
    shell:
        "bcftools call -m -v -Ov -o {output} {input}" 

rule filter_vcf:
    input:
        "result/RV417026_S15_L001.vcf",
    output:
        "result/RV417026_S15_L001_final.vcf",
    conda:
        "envs/mapping.yaml"
    shell:
        "vcfutils.pl varFilter {input} > {output}"

rule vcf_bgzip:
    input:
        "result/RV417026_S15_L001_final.vcf",
    output:
        "result/RV417026_S15_L001_final.vcf.gz",
    conda:
        "envs/mapping.yaml"
    shell:
        "bcftools view {input} -Oz -o {output}"      

rule vcf_index:
    input:
        "result/RV417026_S15_L001_final.vcf.gz",
    output:
        "result/RV417026_S15_L001_final.vcf.gz.tbi",
    conda:
        "envs/mapping.yaml"
    shell:
        "bcftools index -t -o {output} {input}" 

rule consensus:
    input:
        "result/RV417026_S15_L001_final.vcf.gz",
        "workflow/ref.fasta",
    output:
        "result/RV417026_S15_L001_consensus.fa",
    conda:
        "envs/mapping.yaml"
    shell:
        "bcftools consensus -f {input[1]} {input[0]} > {output}"


    
